<div align="center">

▄████████  ▄████████    ▄████████
███    ███ ███    ███   ███    ███
███    ███ ███    ███   ███    █▀
███    ███ ███    ███  ▄███▄▄▄
-███    ███-███    ███ ▀▀███▀▀▀
███    ███ ███    ███   ███    █▄
███    ███ ███    ███   ███    ███
██████████  ████████    ██████████

c o u r s e - M A N A GEMENT - s y s t e m

</div>

โปรเจกต์นี้คือ Course Management System (CMS), โปรแกรมจัดการรายวิชาแบบง่ายๆ ที่ทำงานบน Console เขียนด้วยภาษา C ล้วนๆ

·.¸¸.·´´¯··..· How to Run ·.¸¸.·´´¯··..·`

ทำตามขั้นตอนง่ายๆ นี้เพื่อเริ่มใช้งานโปรแกรม

1. Clone Project

เปิด Terminal แล้วใช้คำสั่งนี้เพื่อคัดลอกโปรเจกต์ลงมาที่เครื่อง
Bash

git clone https://github.com/Panabordee/final.git
cd final

2. Compile

คอมไพล์โปรแกรมโดยใช้คำสั่ง gcc แบบระบุไฟล์ทั้งหมดด้วยตัวเอง:
Bash

gcc main.c unittests.c e2etests.c -o course_manager.exe

คำสั่งนี้จะสร้างไฟล์โปรแกรมที่ชื่อ course_manager.exe ขึ้นมา

3. Run

หลังจากคอมไพล์เสร็จ สามารถรันโปรแกรมด้วยคำสั่งนี้:
Bash

./course_manager.exe

    สำคัญ: ต้องมีไฟล์ courses.csv อยู่ในโฟลเดอร์เดียวกันกับ course_manager.exe ด้วยนะ!

·.¸¸.·´´¯··..· Code Logic ·.¸¸.·´´¯··..·`

ตรรกะของโปรแกรมนี้แบ่งเป็น 2 ส่วนหลักๆ คือโครงสร้างไฟล์และการไหลของข้อมูล

File Structure

เราแยกโค้ดตามหน้าที่ของมันเพื่อให้จัดการง่าย:

    header.h: เป็น "พิมพ์เขียว" หลักของโปรเจกต์ บอกทุกไฟล์ว่ามีฟังก์ชันอะไรให้ใช้บ้าง

    main.c: จัดการ "เมนูหลัก" และเป็นจุดเริ่มต้น

    ไฟล์ .c อื่นๆ: แต่ละไฟล์มีหน้าที่เฉพาะของตัวเอง เช่น data_management.c จัดการการเซฟ/โหลดไฟล์, ui_pages.c จัดการหน้าจอต่างๆ, unittests.c และ e2etests.c ใช้สำหรับทดสอบโปรแกรม

Data Flow

โปรแกรมทำงานกับข้อมูลแบบง่ายๆ คือ:
Diff

+ 1. อ่านทั้งหมด: ตอนเปิดโปรแกรม มันจะอ่านข้อมูลทั้งหมดจาก courses.csv มาเก็บไว้ใน RAM
# 2. แก้ไขในแรม: เวลาเรา เพิ่ม, ลบ, หรือแก้ไขข้อมูล โปรแกรมจะทำกับข้อมูลที่อยู่ใน RAM ก่อน
- 3. เขียนทับทั้งหมด: เมื่อมีการเปลี่ยนแปลงข้อมูล โปรแกรมจะเอาข้อมูลทั้งหมดที่อยู่ใน RAM ไปเขียนทับไฟล์ courses.csv

